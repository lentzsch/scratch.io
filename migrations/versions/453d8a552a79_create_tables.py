"""create tables

Revision ID: 453d8a552a79
Revises: 
Create Date: 2021-06-01 11:12:51.261740

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")


# revision identifiers, used by Alembic.
revision = '453d8a552a79'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE skills SET SCHEMA {SCHEMA};")

    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=25), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE tags SET SCHEMA {SCHEMA};")

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('first_name', sa.String(length=40), nullable=True),
    sa.Column('last_name', sa.String(length=40), nullable=True),
    sa.Column('avatar', sa.String(length=255), nullable=True),
    sa.Column('website', sa.String(length=255), nullable=True),
    sa.Column('github', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")

    op.create_table('gamejams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('theme', sa.String(), nullable=False),
    sa.Column('blurb', sa.Text(), nullable=False),
    sa.Column('avatar', sa.String(), nullable=True),
    sa.Column('website', sa.String(), nullable=True),
    sa.Column('github', sa.String(), nullable=True),
    sa.Column('userLimit', sa.Integer(), nullable=False),
    sa.Column('startDate', sa.Date(), nullable=False),
    sa.Column('endDate', sa.Date(), nullable=False),
    sa.Column('ownerId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ownerId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE gamejams SET SCHEMA {SCHEMA};")

    op.create_table('skills_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('skillId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['skillId'], ['skills.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE skills_users SET SCHEMA {SCHEMA};")

    op.create_table('teams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('blurb', sa.Text(), nullable=True),
    sa.Column('avatar', sa.String(), nullable=True),
    sa.Column('website', sa.String(), nullable=True),
    sa.Column('github', sa.String(), nullable=True),
    sa.Column('recruiting', sa.Boolean(), nullable=True),
    sa.Column('captainId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['captainId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE teams SET SCHEMA {SCHEMA};")

    op.create_table('games',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('blurb', sa.Text(), nullable=True),
    sa.Column('avatarUrl', sa.String(length=255), nullable=True),
    sa.Column('githubUrl', sa.String(length=255), nullable=True),
    sa.Column('websiteUrl', sa.String(length=255), nullable=True),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('teamId', sa.Integer(), nullable=True),
    sa.Column('gameJamId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['gameJamId'], ['gamejams.id'], ),
    sa.ForeignKeyConstraint(['teamId'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE games SET SCHEMA {SCHEMA};")

    op.create_table('skills_teams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('teamId', sa.Integer(), nullable=True),
    sa.Column('skillId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['skillId'], ['skills.id'], ),
    sa.ForeignKeyConstraint(['teamId'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE skills_teams SET SCHEMA {SCHEMA};")

    op.create_table('tags_gamejams',
    sa.Column('tagId', sa.Integer(), nullable=True),
    sa.Column('gameJamId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['gameJamId'], ['gamejams.id'], ),
    sa.ForeignKeyConstraint(['tagId'], ['tags.id'], )
    )
    if environment == "production":
        op.execute(f"ALTER TABLE tags_gamejams SET SCHEMA {SCHEMA};")

    op.create_table('teams_gamejams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('teamId', sa.Integer(), nullable=True),
    sa.Column('gameJamId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['gameJamId'], ['gamejams.id'], ),
    sa.ForeignKeyConstraint(['teamId'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE teams_gamejams SET SCHEMA {SCHEMA};")

    op.create_table('users_teams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('teamId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['teamId'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE users_teams SET SCHEMA {SCHEMA};")

    op.create_table('tags_games',
    sa.Column('tagId', sa.Integer(), nullable=True),
    sa.Column('gameId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['gameId'], ['games.id'], ),
    sa.ForeignKeyConstraint(['tagId'], ['tags.id'], )
    )
    if environment == "production":
        op.execute(f"ALTER TABLE tags_games SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tags_games')
    op.drop_table('users_teams')
    op.drop_table('teams_gamejams')
    op.drop_table('tags_gamejams')
    op.drop_table('skills_teams')
    op.drop_table('games')
    op.drop_table('teams')
    op.drop_table('skills_users')
    op.drop_table('gamejams')
    op.drop_table('users')
    op.drop_table('tags')
    op.drop_table('skills')
    # ### end Alembic commands ###
